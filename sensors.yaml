##########################################################
######################### ENERGY #########################
##########################################################
- platform: template
  sensors:
    energy_consumption_w:
      friendly_name: "Energy consumption"
      unit_of_measurement: W
      value_template: "{{ state_attr('sensor.carichi_globale_controllo_consumo_totale', 'status_value') | float / 1000}}"

- platform: integration
  source: sensor.carichi_globale_controllo_consumo_totale
  name: energy_consumption_kwh
  unit: kW
  unit_time: h
  round: 2
  method: left

- platform: template
  sensors:
    daily_energy_consumption_kwh:
      friendly_name: "Daily energy consumption"
      unit_of_measurement: kWh
      value_template: >-
        {{(states('sensor.daily_energy_consumption_kwh_f1') | float) + 
          (states('sensor.daily_energy_consumption_kwh_f2') | float) + 
          (states('sensor.daily_energy_consumption_kwh_f3') | float)}}

- platform: template
  sensors:
    monthly_energy_consumption_kwh:
      friendly_name: "Monthly energy consumption"
      unit_of_measurement: kWh
      value_template: >-
        {{(states('sensor.monthly_energy_consumption_kwh_f1') | float) + 
          (states('sensor.monthly_energy_consumption_kwh_f2') | float) + 
          (states('sensor.monthly_energy_consumption_kwh_f3') | float)}}

- platform: template
  sensors:
    yearly_energy_consumption_kwh:
      friendly_name: "Yearly energy consumption"
      unit_of_measurement: kWh
      value_template: >-
        {{(states('sensor.yearly_energy_consumption_kwh_f1') | float) + 
          (states('sensor.yearly_energy_consumption_kwh_f2') | float) + 
          (states('sensor.yearly_energy_consumption_kwh_f3') | float)}}

- platform: template
  sensors:
    daily_energy_cost:
      friendly_name: "Daily energy cost"
      unit_of_measurement: "€"
      value_template: "{{ ((states('sensor.daily_energy_consumption_kwh_f1') | float) * 0.09) | round(2) }}"

- platform: template
  sensors:
    monthly_energy_cost:
      friendly_name: "Monthly energy cost"
      unit_of_measurement: "€"
      value_template: "{{ ((states('sensor.monthly_energy_consumption_kwh_f1') | float) * 0.09) | round(2) }}"

- platform: template
  sensors:
    yearly_energy_cost:
      friendly_name: "Yearly energy cost"
      unit_of_measurement: "€"
      value_template: "{{ ((states('sensor.yearly_energy_consumption_kwh_f1') | float) * 0.09) | round(2) }}"


##########################################################
###################### TEMPERATURE #######################
##########################################################
- platform: template
  sensors:
    mean_temperature:
      friendly_name: "Mean temperature"
      unit_of_measurement: C
      value_template: "{{ state_attr('climate.thermostats', 'current_temperature') }}"


##########################################################
#################### SYSTEM MONITORING ###################
##########################################################
- platform: mqtt
  name: "CPU temperature"
  state_topic: system_monitor/temperature
  unit_of_measurement: C
  value_template: "{{ (value | float / 1000) | round(2) }}"

- platform: mqtt
  name: "CPU usage"
  state_topic: system_monitor/cpu-usage
  unit_of_measurement: "%"
  value_template: "{{ value | float | round(2) }}"

- platform: mqtt
  name: "RAM usage"
  state_topic: system_monitor/ram-usage
  unit_of_measurement: "%"
  value_template: "{{ value | float | round(2) }}"

- platform: mqtt
  name: "Storage usage"
  state_topic: system_monitor/storage-usage
  unit_of_measurement: "%"
  value_template: "{{ value | float | round(2) }}"


##########################################################
###################### PRINTERS ##########################
##########################################################
- platform: snmp
  name: "Xerox printer page count"
  host: !secret xerox_printer_ip
  baseoid: 1.3.6.1.4.1.253.8.53.13.2.1.6.1.20.1
  accept_errors: true
  unit_of_measurement: 'pages'

- platform: snmp
  name: "Xerox printer cyan level raw"
  host: !secret xerox_printer_ip
  baseoid: 1.3.6.1.2.1.43.11.1.1.9.1.1
  accept_errors: true

- platform: snmp
  name: "Xerox printer cyan cap raw"
  host: !secret xerox_printer_ip
  baseoid: 1.3.6.1.2.1.43.11.1.1.8.1.1
  accept_errors: true

- platform: snmp
  name: "Xerox printer magenta level raw"
  host: !secret xerox_printer_ip
  baseoid: 1.3.6.1.2.1.43.11.1.1.9.1.2
  accept_errors: true

- platform: snmp
  name: "Xerox printer magenta cap raw"
  host: !secret xerox_printer_ip
  baseoid: 1.3.6.1.2.1.43.11.1.1.8.1.2
  accept_errors: true

- platform: snmp
  name: "Xerox printer yellow level raw"
  host: !secret xerox_printer_ip
  baseoid: 1.3.6.1.2.1.43.11.1.1.9.1.3
  accept_errors: true

- platform: snmp
  name: "Xerox printer yellow cap raw"
  host: !secret xerox_printer_ip
  baseoid: 1.3.6.1.2.1.43.11.1.1.8.1.3
  accept_errors: true

- platform: snmp
  name: "Xerox printer black level raw"
  host: !secret xerox_printer_ip
  baseoid: 1.3.6.1.2.1.43.11.1.1.9.1.4
  accept_errors: true

- platform: snmp
  name: "Xerox printer black cap raw"
  host: !secret xerox_printer_ip
  baseoid: 1.3.6.1.2.1.43.11.1.1.8.1.4
  accept_errors: true

- platform: template
  sensors:
    xerox_printer_cyan_toner_level:
      friendly_name: "Cyan toner level"
      unit_of_measurement: "%"
      value_template: "{{ (((states.sensor.xerox_printer_cyan_level_raw.state | float) / (states.sensor.xerox_printer_cyan_cap_raw.state | float)) * 100) | int }}"
    xerox_printer_magenta_toner_level:
      friendly_name: "Magenta toner level"
      unit_of_measurement: "%"
      value_template: "{{ (((states.sensor.xerox_printer_magenta_level_raw.state | float) / (states.sensor.xerox_printer_magenta_cap_raw.state | float)) * 100) | int }}"
    xerox_printer_yellow_toner_level:
      friendly_name: "Yellow toner level"
      unit_of_measurement: "%"
      value_template: "{{ (((states.sensor.xerox_printer_yellow_level_raw.state | float) / (states.sensor.xerox_printer_yellow_cap_raw.state | float)) * 100) | int }}"
    xerox_printer_black_toner_level:
      friendly_name: "Black toner level"
      unit_of_measurement: "%"
      value_template: "{{ (((states.sensor.xerox_printer_black_level_raw.state | float) / (states.sensor.xerox_printer_black_cap_raw.state | float)) * 100) | int }}"

- platform: snmp
  name: "Samsung printer page count"
  host: !secret samsung_printer_ip
  baseoid: 1.3.6.1.4.1.236.11.5.1.1.9.2.0
  accept_errors: true
  unit_of_measurement: 'pages'

- platform: snmp
  name: "Samsung printer black level raw"
  host: !secret samsung_printer_ip
  baseoid: 1.3.6.1.2.1.43.11.1.1.9.1.4
  accept_errors: true

- platform: snmp
  name: "Samsung printer black cap raw"
  host: !secret samsung_printer_ip
  baseoid: 1.3.6.1.2.1.43.11.1.1.8.1.4
  accept_errors: true

- platform: template
  sensors:
    samsung_printer_black_toner_level:
      friendly_name: "Black toner level"
      unit_of_measurement: "%"
      value_template: "{{ (((states.sensor.samsung_printer_black_level_raw.state | float) / (states.sensor.samsung_printer_black_cap_raw.state | float)) * 100) | int }}"


##########################################################
######################### EXTRA ##########################
##########################################################
- platform: template
  sensors:
    zero_sensor:
      friendly_name: "Zero sensor"
      value_template: 0
